@page "/clientes"

@inject IClienteProxy Proxy;
@inject NavigationManager navigator;
@inject IToastService ToastService;

<h4>Listado de Clientes</h4>

<GroupBox Titulo="Buscar cliente" Class="mt-5">
    <Contenido>
        <div class="row">
            <div class="col-md-4">
                <label>Nombre</label>
                <input class="form-control" @bind="RequestBusqueda.Nombre" />
            </div>
            <div class="col-md-2">
                <label>Dni</label>
                <input class="form-control" @bind="RequestBusqueda.Dni" />
            </div>
            <div class="col-md-4 mt-4 mb-3">
                <div class="btn-group">
                    <Button Class="btn btn-light" @onclick="OnBuscar"><i class="bi bi-search"></i></Button>
                    <Button Class="btn btn-light" @onclick="OnRefrescar"><i class="bi bi-arrow-repeat"></i></Button>
                </div>
            </div>
        </div>
    </Contenido>
</GroupBox>
<div class="row mt-3 mt-5 mb-5">
    <Grilla TItem="ListaClientesResponse" ProveedorData="DataProvider" Titulo="" @ref="GrillaClientes" HeaderAlign="Alignment.Center" TextAlign="Alignment.Center">
        <ColumnasAdicionales>
            <GridColumn TItem="ListaClientesResponse" HeaderText="Acciones" Filterable="false" HeaderTextAlignment="Alignment.Center" TextAlignment="Alignment.Center">
                <button class="btn btn-sm btn-primary"><i class="bi bi-eye"></i></button>
                <button class="btn btn-sm btn-primary" @onclick="() => OnEditarCliente(context)"><i class="bi bi-pencil"></i></button>
                <button class="btn btn-sm btn-danger"><i class="bi bi-trash"></i></button>
            </GridColumn>
        </ColumnasAdicionales>
    </Grilla>
</div>

<Loading isLoading="isLoading" />

@code {
    public ICollection<ListaClientesResponse> ListaClientes { get; set; } = new List<ListaClientesResponse>();
    Grilla<ListaClientesResponse> GrillaClientes { get; set; } = default!;
    public BusquedaClientesRequest RequestBusqueda { get; set; } = new() { Pagina = 1, Filas = 10 };

    public bool isLoading { get; set; } = false;

    private async Task<GridDataProviderResult<ListaClientesResponse>> DataProvider(GridDataProviderRequest<ListaClientesResponse> request)
    {
        isLoading = true;
        try
        {
        RequestBusqueda.Pagina = request.PageNumber;
        RequestBusqueda.Filas = request.PageSize;
        var response = await Proxy.GetClientes(RequestBusqueda);
        if (response is { Success: true })
        {
            return await Task.FromResult(new GridDataProviderResult<ListaClientesResponse>()
            {
                Data = response.Collection,
                TotalCount = response.TotalRegistros
            });
        }
        }
        catch (Exception ex)
        {
            ToastService.ShowWarning($"Error al listar los clientes:{ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
        return await Task.FromResult(new GridDataProviderResult<ListaClientesResponse>());
    }

    private async Task OnBuscar()
    {
        await GrillaClientes.ActualizarGrid();
    }

    private async Task OnRefrescar()
    {
        RequestBusqueda = new() { Pagina = 1, Filas = 10 };
        await GrillaClientes.ActualizarGrid();
    }

    private void OnEditarCliente(ListaClientesResponse item)
    {
        navigator.NavigateTo($"/Clientes/editar/{item.Id}");
    }


}
