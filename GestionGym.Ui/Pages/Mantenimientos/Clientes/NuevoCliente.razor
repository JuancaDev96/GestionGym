@page "/clientes/registro/"
@inject IMaestroProxy ProxyMaestro;
@inject IClienteProxy ProxyCliente;
@inject NavigationManager navegator;
@inject IToastService ToastService;

<h4>Mantenimiento de Cliente</h4>

<Tabs Class="mt-5">
    <Tab Title="Datos personales" IsActive="true" Name="tabPrincipal">
        <Content>
            <DatosPersonales Request="DatosPersonales" OnGuardarDatosPersonales="GuardarDatosPersonales"></DatosPersonales>
        </Content>
    </Tab>
    <Tab Title="Control Fisico" IsActive="true" Name="tabControlFisico">
        <Content>
            <ControlFisico ProveedorData="GrillaParametros" ControlFisicoClienteResponse="ControlFisicoClienteResponse" NuevoCliente="true"></ControlFisico>
        </Content>
    </Tab>
</Tabs>

<Loading isLoading="isLoading" />

@code {

    public bool isLoading { get; set; } = false;

    #region Datos Personales
    public DatosPersonalesRequest DatosPersonales { get; set; } = new();

    private async Task GuardarDatosPersonales()
    {
        isLoading = true;
        try
        {
            DatosPersonales.IdEstablecimiento = Constantes.IdEstablecimientoDefault;
            var resultado = await ProxyCliente.GuardarDatosPersonales(DatosPersonales);
            if (resultado is { Success: false })
            {
                ToastService.ShowWarning($"Error al registrar datos personales:{resultado.Message}");
            }
            else
            {
                ToastService.ShowSuccess($"Datos personales registrados");
                navegator.NavigateTo($"/clientes/editar/{resultado.Data}");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowWarning($"Error al registrar datos personales:{ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    #endregion

    #region Control Fisico
    List<ListaControlFisicoClienteResponse> ControlFisicoClienteResponse { get; set; } = new();
    public ListaDetalleMaestroRequest RequestDetalleMaestro { get; set; } = new() { Pagina = 1, Filas = 10 };

    private async Task ListarParametrosControlFisico(int idCliente)
    {
        var resultado = await ProxyCliente.GetControlFisicoParametros(idCliente);
        if (resultado is { Success: false })
        {
            ToastService.ShowWarning($"Error al listar parametros de control fisico:{resultado.Message}");
        }
        else
        {
            if (resultado.Data != null)
                ControlFisicoClienteResponse = resultado.Data;
        }
    }

    private async Task<GridDataProviderResult<DetalleMaestroResponse>> GrillaParametros(GridDataProviderRequest<DetalleMaestroResponse> request)
    {
        try
        {
            RequestDetalleMaestro.codigoMaestro = CodigoMaestro.CTRL_FISICO;
            var response = await ProxyMaestro.ListarDetalleMaestroByCodigo(RequestDetalleMaestro);
            if (response is { Success: true })
            {
                if (response.Collection != null)
                {
                    return await Task.FromResult(new GridDataProviderResult<DetalleMaestroResponse>()
                        {
                            Data = response.Collection,
                            TotalCount = response.TotalRegistros
                        });
                }
                else return await Task.FromResult(new GridDataProviderResult<DetalleMaestroResponse>());
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Error al listar los parametros: {ex.Message}");
        }
        return await Task.FromResult(new GridDataProviderResult<DetalleMaestroResponse>());
    }
    #endregion

}
